service:
  name: github-active-users

frameworkVersion: ">=1.48.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  stackTags:
    description: Audit active Github users
    systemCode: ${self:service}
    environment: ${self:custom.${self:provider.stage}.environmentTag}
    teamDL: reliability.engineering@ft.com
  region: ${self:custom.${self:provider.stage}.region, env:AWS_REGION, 'eu-west-1'}
  stage: ${opt:stage}
  # This role should be created using aws-composer. This is looked up against the current account
  role: arn:aws:iam::${self:custom.accountId}:role/FTApplicationRoleFor_${self:service.name}
  memorySize: 256
  timeout: 900
  logRetentionInDays: 14
  versionFunctions: false
  deploymentBucket: artefacts.${self:service.name}.${self:custom.accountId}.${self:provider.region}
  environment:
    ENVIRONMENT: ${self:provider.stage}
    NODE_ENV: ${self:custom.${self:provider.stage}.NODE_ENV, 'production'}
    SYSTEM_CODE: ${self:service.name}
    CONSOLE_LOG_LEVEL: info
    GITHUB_ORGANISATION: ${env:GITHUB_ORGANISATION}
    GITHUB_ACCESS_TOKEN: ${env:GITHUB_ACCESS_TOKEN}

custom:
  accountId: ${self:custom.${self:provider.stage}.accountId}
  runbookUrl: https://github.com/Financial-Times/${self:service.name}/blob/${env:CIRCLE_SHA1, 'master'}/README.md

  prod:
    accountId: '442980623726'
    environmentTag: p

  eu-west-1:
    splunkIndexerArnVariable: aws-composer-auditing-global-stack.SplunkCloudIndexerLambdaarn
  regionFallback:
    splunkIndexerArnVariable: aws-composer-auditing-${self:provider.region}-splunk.SplunkCloudIndexerGenericLambdaArn

  alerts:
    function:
      - functionErrors
    definitions:
      functionErrors:
        # name alarm so it is ingested into Heimdall
        nameTemplate: '$[functionName] error rate is high systemCode=${self:service.name},environment=${self:custom.${self:provider.stage}.environmentTag},severity=3'
        description: 'Error count breached threshold. <${self:custom.runbookUrl}|View Runbook>'
        treatMissingData: ignore
        threshold: 1

  # Specify a Lambda function to forward CloudWatch logs to
  logForwarding:
    # Look up the existing composer Splunk Indexer function deployed to the account
    destinationARN: ${cf:${self:custom.${self:provider.region}.splunkIndexerArnVariable, self:custom.regionFallback.splunkIndexerArnVariable}}
    # Ignore standard Lambda log format as these are unstructured
    filterPattern: "-\"RequestId: \""
    stages:
     - prod

plugins:
  - serverless-plugin-aws-alerts
  - serverless-log-forwarding

functions:
  reporter-generator:
    handler: src/handlers/user-logging-handler.handler
    events:
      - schedule:
          description: 'Trigger Github Active users stats report'
          input: '{}'
          rate: rate(1 hour)
          enabled: true
